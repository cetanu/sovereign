image: python:3.11

definitions:
  caches:
    docker-cliplugins: ~/.docker/cli-plugins
  yaml-anchors:
    - &setup-docker-compose-latest-script >-
        wget --no-verbose --no-clobber https://github.com/docker/compose/releases/latest/download/docker-compose-linux-x86_64 --output-document ~/.docker/cli-plugins/docker-compose
        || true
        ; chmod a+x ~/.docker/cli-plugins/docker-compose
        && ln --symbolic ~/.docker/cli-plugins/docker-compose /usr/local/bin/docker-compose

.set_environment: &set_environment |
  export PYTHONUNBUFFERED=1
  export PYTHONDONTWRITEBYTECODE=1
  export PIP_NO_CACHE_DIR=off
  export PIP_DISABLE_PIP_VERSION_CHECK=on
  export PIP_DEFAULT_TIMEOUT=100
  export POETRY_HOME="/opt/poetry"
  export POETRY_VIRTUALENVS_IN_PROJECT=true
  export POETRY_NO_INTERACTION=1
  export PYSETUP_PATH="/opt/pysetup"
  export VENV_PATH="/opt/pysetup/.venv"
  export PIPX_HOME="/usr/local/pipx"
  export PIPX_BIN_DIR="/usr/local/bin"
  export PATH="${POETRY_HOME}/bin:${VENV_PATH}/bin:${PATH}"
  echo "${PATH}"

.set_buildkit_false: &set_buildkit_false |
  export DOCKER_BUILDKIT=0

.install_poetry: &install_poetry |
  pip install pipx~=1.2.0
  pipx install poetry~=1.6.1

options:
  docker: true

pipelines:
  default:
    - parallel: &tests
      - step:
          name: Unit tests
          caches:
            - pip
            - docker-cliplugins
          script:
            - *set_environment
            - *set_buildkit_false
            - *setup-docker-compose-latest-script
            - *install_poetry
            - make install-deps
            - make unit
      - step:
          name: Linting
          caches: [pip]
          script:
            - *set_environment
            - *install_poetry
            - make install-deps
            - poetry run pylint src/sovereign
      - step:
          name: Format check
          caches: [pip]
          script:
            - *set_environment
            - *install_poetry
            - make install-deps
            - poetry run black --check src/sovereign
      - step:
          name: Type checks
          caches: [pip]
          script:
            - *set_environment
            - *install_poetry
            - make install-deps
            - poetry run mypy src/sovereign
    - parallel: &acceptance
        - step:
            name: envoy-1.18.2
            caches:
              - pip
              - docker-cliplugins
            script:
              - *set_buildkit_false
              - *setup-docker-compose-latest-script
              - ENVOY_VERSION=v1.18.2 make test-envoy-version
        - step:
            name: envoy-1.24.1
            caches:
              - pip
              - docker-cliplugins
            script:
              - *set_buildkit_false
              - *setup-docker-compose-latest-script
              - ENVOY_VERSION=v1.24.1 make test-envoy-version
        - step:
            name: envoy-1.25.3
            caches:
              - pip
              - docker-cliplugins
            script:
              - *set_buildkit_false
              - *setup-docker-compose-latest-script
              - ENVOY_VERSION=v1.25.3 make test-envoy-version
  branches:
    master:
      - parallel: *tests
      - parallel: *acceptance
      - step:
          name: Mirror to github
          script:
            - git remote add github git@github.com:cetanu/sovereign.git
            - git fetch --unshallow github
            - git branch --set-upstream-to master
            - git push --set-upstream github master
  tags:
    '*.*.*':
      - step:
          name: Release to PyPI
          caches: [pip]
          script:
            - *set_environment
            - *set_buildkit_false
            - *install_poetry
            - make install-deps
            - make release
    '*.*.*rc*': &prerelease
      - step:
          name: Pre-release to PyPI
          caches: [pip]
          script:
            - *set_environment
            - *set_buildkit_false
            - *install_poetry
            - make install-deps
            - poetry run python scripts/release_check.py
            - make release
    '*.*.*a*': *prerelease
    '*.*.*b*': *prerelease

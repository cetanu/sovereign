image: python:3.11

.install_docker_compose: &install_docker_compose pip install docker-compose

.set_environment: &set_environment |
  export PYTHONUNBUFFERED=1
  export PYTHONDONTWRITEBYTECODE=1
  export PIP_NO_CACHE_DIR=off
  export PIP_DISABLE_PIP_VERSION_CHECK=on
  export PIP_DEFAULT_TIMEOUT=100
  export POETRY_HOME="/opt/poetry"
  export POETRY_VIRTUALENVS_IN_PROJECT=true
  export POETRY_NO_INTERACTION=1
  export PYSETUP_PATH="/opt/pysetup"
  export VENV_PATH="/opt/pysetup/.venv"
  export PATH="${POETRY_HOME}/bin:${VENV_PATH}/bin:${PATH}"
  echo "${PATH}"

.install_poetry: &install_poetry |
  pip install pipx~=1.1.0
  pipx install poetry~=1.2.2
  pipx ensurepath

options:
  docker: true

pipelines:
  default:
    - parallel: &tests
      - step:
          name: Unit tests
          caches: [pip]
          script:
            - *set_environment
            - *install_poetry
            - make install-deps
            - |
              CONFIG_LOADER_TEST='{"hello": "world"}' \
              SOVEREIGN_ENABLE_ACCESS_LOGS='False' \
              SOVEREIGN_ENVIRONMENT_TYPE=local \
              SOVEREIGN_CONFIG=file://test/config/config.yaml \
              poetry run coverage run --source=sovereign -m pytest -vv --tb=short -ra --ignore=test/acceptance --junitxml=test-reports/unit.xml
      - step:
          name: Linting
          caches: [pip]
          script:
            - *set_environment
            - *install_poetry
            - make install-deps
            - poetry run pylint src/sovereign
      - step:
          name: Format check
          caches: [pip]
          script:
            - *set_environment
            - *install_poetry
            - make install-deps
            - poetry run black --check src/sovereign
      - step:
          name: Type checks
          caches: [pip]
          script:
            - *set_environment
            - *install_poetry
            - make install-deps
            - poetry run mypy --strict src/sovereign
    - parallel: &acceptance
        - step:
            name: envoy-1.13.7
            caches: [pip]
            script:
              - *install_docker_compose
              - ENVOY_VERSION=v1.13.7 make test-envoy-version
        - step:
            name: envoy-1.14.7
            caches: [pip]
            script:
              - *install_docker_compose
              - ENVOY_VERSION=v1.14.7 make test-envoy-version
        - step:
            name: envoy-1.15.4
            caches: [pip]
            script:
              - *install_docker_compose
              - ENVOY_VERSION=v1.15.4 make test-envoy-version
        - step:
            name: envoy-1.16.3
            caches: [pip]
            script:
              - *install_docker_compose
              - ENVOY_VERSION=v1.16.3 make test-envoy-version
        - step:
            name: envoy-1.17.2
            caches: [pip]
            script:
              - *install_docker_compose
              - ENVOY_VERSION=v1.17.2 make test-envoy-version
        - step:
            name: envoy-1.18.2
            caches: [pip]
            script:
              - *install_docker_compose
              - ENVOY_VERSION=v1.18.2 make test-envoy-version
  branches:
    master:
      - parallel: *tests
      - parallel: *acceptance
      - step:
          name: Release to PyPI
          caches: [pip]
          script:
            - *set_environment
            - *install_poetry
            - make install-deps
            - make release
      - step:
          name: Mirror to github
          script:
            - git remote add github git@github.com:cetanu/sovereign.git
            - git fetch --unshallow github
            - git branch --set-upstream-to master
            - git push --set-upstream github master
